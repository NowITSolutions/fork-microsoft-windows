---
# This task will will check the health of the availability group replicas (needs to be run on active node).
# Target SQLAG.yourdomain.com rather than SQL01.yourdomain.com or SQL02.yourdomain.com

- name: Check to see if Availability Group Database is Healthy
  ansible.builtin.script: "scripts/sql/windows-sql-ag-failover-check.ps1"
  delegate_to: "{{ sql_ag }}"
  register: sql_replica_node_healthy

- name: Parse 'sql_replica_node_healthy' as JSON and set fact
  set_fact:
    sql_replica_node_healthy: "{{ sql_replica_node_healthy.stdout | from_json }}"

- name: SQL Replica Node Health Status
  ansible.builtin.debug:
    msg: "SQL Replicas Health Check on {{ ansible_host }} was Successful"
  when:
    - sql_replica_node_healthy['sql_availability_group_databases']
       | map(attribute='IsSuspended')
       | select('equalto', 'false')
       | length == sql_replica_node_healthy['sql_availability_group_databases'] | length
    - sql_replica_node_healthy['sql_availability_group_databases']
       | map(attribute='SynchronizationState')
       | select('equalto', 'Synchronized')
       | length == sql_replica_node_healthy['sql_availability_group_databases'] | length

- name: Fail Ansible Play if SQL Replica Node Health Check Fails
  fail:
    msg:
    - "SQL Replica Node Health Check has Failed."
    - "{{ sql_replica_node_healthy }}"
  when:
    - sql_replica_node_healthy['sql_availability_group_databases']
       | map(attribute='IsSuspended')
       | select('equalto', 'true')
       | length == sql_replica_node_healthy['sql_availability_group_databases'] | length
    - not sql_replica_node_healthy['sql_availability_group_databases']
       | map(attribute='SynchronizationState')
       | select('equalto', 'Synchronized')
       | length == sql_replica_node_healthy['sql_availability_group_databases'] | length