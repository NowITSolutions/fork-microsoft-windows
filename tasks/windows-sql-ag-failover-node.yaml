---
# This task will will check the health of the availability group replicas (needs to be run on active node).
# Target SQLAG.yourdomain.com rather than SQL01.yourdomain.com or SQL02.yourdomain.com
# I have hardcoded the SQL Instance 'Default' into these paths, at a future date i would like to pass that as a variable.

- name: Failover Availability Group
  ansible.builtin.script: "scripts/windows-sql-ag-failover-node.ps1 -Instance {{ item['InstanceName'] }} -FailoverNode {{ sql_current_replica['failover_to_node'] }} -AvailabilityGroup {{ item['Name'] }}"
  with_items: "{{ sql_current_replica['sql_availability_groups'] }}"
  delegate_to: "{{ sql_current_replica['failover_to_node_fqdn'] }}"

- name: Check to see if Replica has been Failed Over
  ansible.builtin.script: "scripts/windows-sql-ag-failover-check.ps1"
  register: sql_replica_notactive
  delegate_to: "{{ sql_current_replica['failover_to_node_fqdn'] }}"
  until: (sql_replica_notactive.stdout | from_json)['failover_required'] | trim == "True"
  retries: 20
  delay: 30

- name: SQL Replica Failover Status
  ansible.builtin.debug:
    msg: "{{ sql_replica_notactive.stdout }}"

- name: Failover Windows Failover Cluster
  ansible.windows.win_shell: |
    $CurrentHost = (hostname).tostring()
    $Failover = Get-ClusterNode -Name $CurrentHost | Get-ClusterGroup | Move-ClusterGroup
    if ($Failover.OwnerNode.Name -eq $CurrentHost -and $Failover.Name -ne "Available Storage") {
        Write-Output $False
      } elseif ($Failover.OwnerNode.Name -ne $CurrentHost -and $Failover.Name -ne "Available Storage") {
        Write-Output $True
      }
  register: sql_replica_windows_failover_cluster
  when: sql_current_replica['failover_required'] | trim == "True" and (sql_replica_notactive.stdout | from_json)['failover_required'] | trim == "True"

- name: Fail Ansible Play if SQL Failover Fails
  fail:
    msg:
    - "SQL Replica Windows Failover Cluster Failover From {{ ansible_host }} has Failed."
    - "{{ sql_replica_windows_failover_cluster.stdout }}"
  when: sql_replica_windows_failover_cluster.stdout | trim != "True" and sql_current_replica['failover_required'] | trim == "True"

- name: Suspend Availability Group Database Data Movement
  ansible.builtin.script: "scripts/windows-sql-ag-suspend-data-movement.ps1 -Instance {{ item['InstanceName'] }} -FailoverNode {{ sql_current_replica['failover_to_node'] }} -AvailabilityGroup {{ item['Name'] }}"
  with_items: "{{ sql_current_replica['sql_availability_groups'] }}"
  delegate_to: "{{ sql_current_replica['failover_to_node_fqdn'] }}"

- name: Check to see if Data Movement has been Suspended
  ansible.builtin.script: "scripts/windows-sql-ag-failover-check.ps1"
  register: sql_suspended_data_movement
  delegate_to: "{{ sql_current_replica['failover_to_node_fqdn'] }}"
  until: (sql_suspended_data_movement.stdout | from_json)['sql_availability_group_databases'] | map(attribute='IsSuspended') | select('equalto', false) | length == (sql_suspended_data_movement.stdout | from_json)['sql_availability_group_databases'] | length
  retries: 20
  delay: 30