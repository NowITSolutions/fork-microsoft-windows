---
# This task will failover to a different RD Broker (Management Server) in the event that the current host is Active"

- name: Check to which user is running the command
  ansible.windows.win_shell: |
    whoami
  register: windows_runas_user

- debug:
    msg: "{{ windows_runas_user.stdout_lines }}"

- name: Check to see if running as administrator
  ansible.windows.win_shell: |
    #Requires -RunAsAdministrator
    $currentPrincipal = New-Object Security.Principal.WindowsPrincipal(
      [Security.Principal.WindowsIdentity]::GetCurrent()
      )
    $isAdmin = $currentPrincipal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
    if ($isAdmin) {
      Write-Host "PowerShell is running as admin."
    } else {
      Write-Host "PowerShell is not running as admin."
    }
  register: windows_runas_admin

- debug:
    msg: "{{ windows_runas_admin.stdout_lines }}"

- name: Check to see if Current RD Broker Server is active
  ansible.windows.win_shell: |
    #Requires -RunAsAdministrator
    Function Get-AmIActive {
      $CurrentFQDN = [System.Net.Dns]::GetHostByName($env:computerName).HostName
          try {
            $ActiveBroker = (Get-RDConnectionBrokerHighAvailability -ErrorAction stop).ActiveManagementServer
          } catch {
            $BrokerError = $True
          }
          if ($BrokerError -eq $True) {
              Write-Output "Failed"
        } else {
          if ($ActiveBroker -eq $CurrentFQDN -and $BrokerError -eq $False) {
            Write-Output $True
            } else {
            Write-Output $False
            }
          }
        }

    Get-AmIActive
  register: windows_rdbroker_active

- name: Fail Ansible Play if RD Broker Server Check Fails
  fail:
    msg: "RD Broker Server Check Failed."
  when: windows_rdbroker_active.stdout | trim == "Failed"

- name: If current RD Broker Server is active, failover
  ansible.windows.win_shell: |
    Function Get-AvailableBroker {
      $CurrentFQDN = [System.Net.Dns]::GetHostByName($env:computerName).HostName
      $Brokers = (Get-RDConnectionBrokerHighAvailability).ConnectionBroker
      $AvailableBrokers = @()
      foreach ($Broker in ($Brokers | where {$_ -ne $CurrentFQDN})) {
        $AvailableBrokers += $Broker
        }
      Write-Output $AvailableBrokers[0]
      }
    
    Set-RDActiveManagementServer -ManagementServer (Get-AvailableBroker)
  when: windows_rdbroker_active.stdout | trim == "True"

- name: Check to see if active RD Broker Server has changed
  ansible.windows.win_shell: |
    #Requires -RunAsAdministrator
    Function Get-AmIActive {
      $CurrentFQDN = [System.Net.Dns]::GetHostByName($env:computerName).HostName
    	try {
            $ActiveBroker = (Get-RDConnectionBrokerHighAvailability).ActiveManagementServer
          } catch {
            $BrokerError = $True
          }
    	if ($BrokerError -eq $True) {
              Write-Output "Failed"
        } else {
          if ($ActiveBroker -eq $CurrentFQDN -and $BrokerError -eq $False) {
            Write-Output $True
            } else {
            Write-Output $False
            }
          }
        }

    Get-AmIActive
  register: windows_rdbroker_stillactive
  when: windows_rdbroker_active.stdout | trim == "True"
  until: windows_rdbroker_stillactive.stdout | trim == "False"
  retries: 10
  delay: 30

- name: Fail Ansible Play if RD Broker Server Check Fails
  fail:
    msg: "RD Broker Server Check Failed."
  when:
    - windows_rdbroker_active.stdout | trim == "True"
    - windows_rdbroker_stillactive.stdout | trim == "Failed"