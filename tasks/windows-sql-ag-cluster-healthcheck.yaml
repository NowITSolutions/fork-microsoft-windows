---
# This task will will check the health of the availability group replicas (needs to be run on active node).
# Target SQLAG.yourdomain.com rather than SQL01.yourdomain.com or SQL02.yourdomain.com

- name: Check to see if Availability Group Replicas are Healthy
  ansible.windows.win_shell: |
    # Import Required Powershell Modules
      Import-Module SqlServer

    # Initalise Variables
      $SystemHostname = hostname
      $ErrorActionPreference = 'Stop'
      $AvailabilityGroupDatabases = @()
      $AvailabilityGroupReplicas = @()
      $ReplicaStatus = @()

    # Gather Data
      $AvailabilityGroups = Get-ChildItem "SQLSERVER:\SQL\$($SystemHostName)\Default\AvailabilityGroups"

      ForEach ($AvailabilityGroup in $AvailabilityGroups) {
        $AvailabilityGroupDatabases += Get-ChildItem "SQLSERVER:\SQL\$($SystemHostName)\Default\AvailabilityGroups\$($AvailabilityGroup.name)\AvailabilityDatabases"

        ForEach ($AvailabilityGroupDatabase in $AvailabilityGroupDatabases) {
          $AvailabilityGroupReplicas += Get-ChildItem "SQLSERVER:\SQL\$($SystemHostName)\Default\AvailabilityGroups\$($AvailabilityGroup.name)\AvailabilityReplicas"
          }
      }

    # Evaluate Health

      # Get Replicas with ConnectionState not equal to "Connected"
      $DatabaseReplicasNotConnected = $AvailabilityGroupReplicas | Where-Object { $_.ConnectionState -ne "Connected" }

      # Determine if all Replicas are connected
      $DatabaseReplicasConnected = $DatabaseReplicasNotConnected -eq $null

      # Get Replicas with RollupSynchronizationState not equal to "Synchronized"
      $DatabaseReplicasNotSynchronized = $AvailabilityGroupReplicas | Where-Object { $_.RollupSynchronizationState -ne "Synchronized" }

      # Determine if all Replicas are Synchronized
      $DatabaseReplicasSynchronized = $DatabaseReplicasNotSynchronized -eq $null

      # Overall Health of Replicas
      if ($DatabaseReplicasConnected -and $DatabaseReplicasSynchronized) {
        Write-Output $True
        } else {
          foreach ($AvailabilityGroupReplica in $AvailabilityGroupReplicas) {
            $ReplicaStatus += New-Object -TypeName PSObject -Property @{
              Name = $AvailabilityGroupReplica.Name;
              Role = ($AvailabilityGroupReplica.Role | Out-String).trim();
              ConnectionState = ($AvailabilityGroupReplica.ConnectionState | Out-String).trim();
              RollupSynchronizationState = ($AvailabilityGroupReplica.RollupSynchronizationState | Out-String).trim();
              }
            }
          Write-Output $ReplicaStatus | Convertto-json
        }
  delegate_to: "{{ sql_ag }}"
  register: sql_replicas_healthy

- name: Fail Ansible Play if SQL Replicas Health Check on "{{ sql_ag }}" Fails
  fail:
    msg:
    - "SQL Replicas Health Check on {{ sql_ag }} has Failed."
    - "{{ sql_replicas_healthy.stdout }}"
  when: sql_replicas_healthy.stdout | trim != "True"

- name: SQL Replica Health Status
  ansible.builtin.debug:
    msg: "SQL Replicas Health Check on {{ sql_ag }} was Successful"
  when: sql_replicas_healthy.stdout | trim == "True"